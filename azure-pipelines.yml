# https://aka.ms/yaml

trigger:
- main

variables:
  Configuration: Release
  AndroidSupportedAbis: arm64-v8a
  AndroidPackageFormat: apk
  AndroidEnableMarshalMethods: true
  AndroidEnableProfiler: true
  RID: android-arm64
  DotNet.Version: 8.0.100-preview.6.23330.14
  Maui.Feeds: --source https://api.nuget.org/v3/index.json --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet8/nuget/v3/index.json
  MauiTargetFramework: net8.0
  NugetSecurityAnalysisWarningLevel: warn
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:

- job: Xamarin
  condition: false
  pool:
    vmImage: macOS-latest
  steps:

  - task: UseDotNet@2
    displayName: Use .NET $(DotNet.Version)
    inputs:
      version: $(DotNet.Version)
      includePreviewVersions: true

  - bash: >
      dotnet tool install boots --tool-path boots &&
      ./boots/boots https://dl.internalx.com/vsts-devdiv/Xamarin.Android/public/5343278/d17-0/6b0e6b265390832dcfb499e9e1e893c462548a30/xamarin.android-12.1.0.5.pkg
    displayName: install Xamarin.Android

  - task: MSBuild@1
    displayName: build Xamarin.Android app
    inputs:
      solution: XamarinAndroidApp/XamarinAndroidApp/XamarinAndroidApp.csproj
      msbuildArguments: -restore -t:SignAndroidPackage -bl:$(Build.ArtifactStagingDirectory)/logs/XamarinAndroidApp.binlog

  - task: MSBuild@1
    displayName: build Xamarin.Forms Flyout app
    inputs:
      solution: XamarinFormsFlyout/XamarinFormsApp/XamarinFormsApp.Android/XamarinFormsApp.Android.csproj
      msbuildArguments: -restore -t:SignAndroidPackage -bl:$(Build.ArtifactStagingDirectory)/logs/XamarinFormsFlyout.binlog

  - task: MSBuild@1
    displayName: build Xamarin.Forms Blank app
    inputs:
      solution: XamarinFormsBlank/XamarinFormsBlank/XamarinFormsBlank.Android/XamarinFormsBlank.Android.csproj
      msbuildArguments: -restore -t:SignAndroidPackage -bl:$(Build.ArtifactStagingDirectory)/logs/XamarinFormsBlank.binlog

  - task: CopyFiles@2
    displayName: copy apks
    inputs:
      contents: |
        XamarinAndroidApp/**/*-Signed.apk
        XamarinFormsFlyout/**/*-Signed.apk
        XamarinFormsBlank/**/*-Signed.apk
      flattenFolders: true
      targetFolder: $(Build.ArtifactStagingDirectory)/release

  - task: MSBuild@1
    displayName: build Xamarin.Android app AOT
    inputs:
      solution: XamarinAndroidApp/XamarinAndroidApp/XamarinAndroidApp.csproj
      msbuildArguments: -t:Clean,SignAndroidPackage -p:AotAssemblies=true -p:AndroidEnableProfiledAot=true -bl:$(Build.ArtifactStagingDirectory)/logs/XamarinAndroidApp-Aot.binlog

  - task: MSBuild@1
    displayName: build Xamarin.Forms Flyout app AOT
    inputs:
      solution: XamarinFormsFlyout/XamarinFormsApp/XamarinFormsApp.Android/XamarinFormsApp.Android.csproj
      msbuildArguments: -t:Clean,SignAndroidPackage -p:AotAssemblies=true -p:AndroidEnableProfiledAot=true -bl:$(Build.ArtifactStagingDirectory)/logs/XamarinFormsFlyout-Aot.binlog

  - task: MSBuild@1
    displayName: build Xamarin.Forms Blank app AOT
    inputs:
      solution: XamarinFormsBlank/XamarinFormsBlank/XamarinFormsBlank.Android/XamarinFormsBlank.Android.csproj
      msbuildArguments: -t:Clean,SignAndroidPackage -p:AotAssemblies=true -p:AndroidEnableProfiledAot=true -bl:$(Build.ArtifactStagingDirectory)/logs/XamarinFormsFlyout-Aot.binlog

  - task: CopyFiles@2
    displayName: copy apks
    inputs:
      contents: |
        XamarinAndroidApp/**/*-Signed.apk
        XamarinFormsFlyout/**/*-Signed.apk
        XamarinFormsBlank/**/*-Signed.apk
      flattenFolders: true
      targetFolder: $(Build.ArtifactStagingDirectory)/release-aot

  - task: PublishBuildArtifacts@1
    displayName: upload artifacts
    inputs:
      artifactName: xamarin-artifacts
    condition: succeededOrFailed()

- job: MAUI
  workspace:
    clean: all
  pool:
    vmImage: macOS-latest
  steps:
  - checkout: self
    submodules: true

  - task: UseDotNet@2
    displayName: Use .NET $(DotNet.Version)
    inputs:
      version: $(DotNet.Version)
      includePreviewVersions: true

  - bash: dotnet workload install maui $(Maui.Feeds) --from-rollback-file workloads.json --verbosity diag
    displayName: install optional workloads

  - bash: >
      dotnet workload update --print-rollback > $(Build.ArtifactStagingDirectory)/rollback.json &&
      cat $(Build.ArtifactStagingDirectory)/rollback.json
    displayName: save rollback file

  - bash: >
      dotnet new android -o HelloAndroid &&
      dotnet new maui -o HelloMaui
    displayName: dotnet new

  - bash: dotnet restore HelloMaui/HelloMaui.csproj -bl:$(Build.ArtifactStagingDirectory)/logs/HelloMaui-restore.binlog
    displayName: restore maui

  - bash: dotnet restore HelloMauiOld/HelloMauiOld.csproj -bl:$(Build.ArtifactStagingDirectory)/logs/HelloMauiOld-restore.binlog
    displayName: restore old maui

  - bash: dotnet restore external/dotnet-podcasts/src/Mobile/Microsoft.NetConf2021.Maui.csproj -bl:$(Build.ArtifactStagingDirectory)/logs/dotnet-podcasts-restore.binlog
    displayName: restore podcast

  - bash: dotnet build HelloAndroid/HelloAndroid.csproj -r $(RID) -p:RunAOTCompilation=true -p:AndroidEnableProfiledAot=true -bl:$(Build.ArtifactStagingDirectory)/logs/HelloAndroid-Aot.binlog
    displayName: build android AOT

  - bash: dotnet build HelloMaui/HelloMaui.csproj -f $(MauiTargetFramework)-android -r $(RID) -p:RunAOTCompilation=true -p:AndroidEnableProfiledAot=true --no-restore -bl:$(Build.ArtifactStagingDirectory)/logs/HelloMaui-Aot.binlog
    displayName: build maui AOT

  - bash: dotnet build HelloMauiOld/HelloMauiOld.csproj -f $(MauiTargetFramework)-android -r $(RID) -p:RunAOTCompilation=true -p:AndroidEnableProfiledAot=true --no-restore -bl:$(Build.ArtifactStagingDirectory)/logs/HelloMauiOld-Aot.binlog
    displayName: build old maui AOT

  - bash: dotnet build external/dotnet-podcasts/src/Mobile/Microsoft.NetConf2021.Maui.csproj -f $(MauiTargetFramework)-android -r $(RID) -p:RunAOTCompilation=true -p:AndroidEnableProfiledAot=true --no-restore -bl:$(Build.ArtifactStagingDirectory)/logs/dotnet-podcasts-Aot.binlog
    displayName: build podcast AOT

  - task: CopyFiles@2
    displayName: copy apks
    inputs:
      contents: |
        HelloAndroid/**/*-Signed.apk
        HelloMaui/**/*-Signed.apk
        HelloMauiOld/**/*-Signed.apk
        external/dotnet-podcasts/**/*-Signed.apk
      flattenFolders: true
      targetFolder: $(Build.ArtifactStagingDirectory)/release-aot

  - task: PublishBuildArtifacts@1
    displayName: upload artifacts
    inputs:
      artifactName: maui-artifacts
    condition: succeededOrFailed()
